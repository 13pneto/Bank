// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

namespace Repository.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20191202170631_Teste")]
    partial class Teste
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Boleto", b =>
                {
                    b.Property<int>("IdBoleto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContaOrigemIdConta");

                    b.Property<DateTime>("CriadoEm");

                    b.Property<DateTime>("DtVencimento");

                    b.Property<bool>("Status");

                    b.Property<double>("Valor");

                    b.HasKey("IdBoleto");

                    b.HasIndex("ContaOrigemIdConta");

                    b.ToTable("TB_Boleto");
                });

            modelBuilder.Entity("Domain.Conta", b =>
                {
                    b.Property<int>("IdConta")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CriadoEm");

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<bool>("Status");

                    b.HasKey("IdConta");

                    b.ToTable("TB_Conta");
                });

            modelBuilder.Entity("Domain.ContaCliente", b =>
                {
                    b.Property<int>("IdContaCliente")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContaDoClienteIdConta");

                    b.Property<DateTime>("CriadoEm");

                    b.Property<double>("Limite");

                    b.Property<double>("Saldo");

                    b.Property<bool>("Status");

                    b.HasKey("IdContaCliente");

                    b.HasIndex("ContaDoClienteIdConta");

                    b.ToTable("TB_ContaCliente");
                });

            modelBuilder.Entity("Domain.Movimentacao", b =>
                {
                    b.Property<int>("IdMovimento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContaOrigemIdConta");

                    b.Property<DateTime>("DtMovimentacao");

                    b.Property<int?>("FK_ContaDestino")
                        .IsRequired();

                    b.Property<bool>("Status");

                    b.Property<double>("Valor");

                    b.HasKey("IdMovimento");

                    b.HasIndex("ContaOrigemIdConta");

                    b.HasIndex("FK_ContaDestino");

                    b.ToTable("TB_Movimentacao");
                });

            modelBuilder.Entity("Domain.Pessoa", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<DateTime>("CriadoEm");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<bool>("Status");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.HasKey("IdCliente");

                    b.ToTable("TB_Pessoa");
                });

            modelBuilder.Entity("Domain.Boleto", b =>
                {
                    b.HasOne("Domain.Conta", "ContaOrigem")
                        .WithMany()
                        .HasForeignKey("ContaOrigemIdConta")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Domain.ContaCliente", b =>
                {
                    b.HasOne("Domain.Conta", "ContaDoCliente")
                        .WithMany()
                        .HasForeignKey("ContaDoClienteIdConta")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Domain.Movimentacao", b =>
                {
                    b.HasOne("Domain.Conta", "ContaOrigem")
                        .WithMany()
                        .HasForeignKey("ContaOrigemIdConta")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Conta", "ContaDestino")
                        .WithMany()
                        .HasForeignKey("FK_ContaDestino")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
